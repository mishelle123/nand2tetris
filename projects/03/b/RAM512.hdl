// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
 // update the load bit to every RAM64
    DMux8Way(in=load, sel=address[6..8], a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
    // build 8-RAM64 array
    RAM64(in[0..15]=in, load=load1, address=address[0..5], out=r1);
    RAM64(in[0..15]=in, load=load2, address=address[0..5], out=r2);
    RAM64(in[0..15]=in, load=load3, address=address[0..5], out=r3);
    RAM64(in[0..15]=in, load=load4, address=address[0..5], out=r4);
    RAM64(in[0..15]=in, load=load5, address=address[0..5], out=r5);
    RAM64(in[0..15]=in, load=load6, address=address[0..5], out=r6);
    RAM64(in[0..15]=in, load=load7, address=address[0..5], out=r7);
    RAM64(in[0..15]=in, load=load8, address=address[0..5], out=r8);
    // return the specify register
    Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5,f=r6, g=r7, h=r8, sel=address[6..8], out=out);
}